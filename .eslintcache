[{"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js":"1","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/Header.jsx":"2","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/Title.jsx":"3","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/SocialMedia.jsx":"4","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Home.jsx":"5","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Admin.jsx":"6","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/AdminButtons.jsx":"7","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/ManageProject.jsx":"8","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx":"9","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx":"10","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx":"11","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx":"12","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx":"13","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/NewLanguageForm.jsx":"14","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx":"15","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx":"16","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx":"17","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx":"18","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/CreateProject.jsx":"19","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Footer.jsx":"20","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/ProjectDetails.jsx":"21","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx":"22","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx":"23","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx":"24","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx":"25"},{"size":362,"mtime":1612345809628,"results":"26","hashOfConfig":"27"},{"size":421,"mtime":1612479016640,"results":"28","hashOfConfig":"27"},{"size":337,"mtime":1612479016640,"results":"29","hashOfConfig":"27"},{"size":154,"mtime":1612479016640,"results":"30","hashOfConfig":"27"},{"size":999,"mtime":1612479016640,"results":"31","hashOfConfig":"27"},{"size":1352,"mtime":1612479016636,"results":"32","hashOfConfig":"27"},{"size":502,"mtime":1612479016636,"results":"33","hashOfConfig":"27"},{"size":120,"mtime":1612353416036,"results":"34","hashOfConfig":"27"},{"size":1094,"mtime":1612479016640,"results":"35","hashOfConfig":"27"},{"size":1511,"mtime":1612479016636,"results":"36","hashOfConfig":"27"},{"size":303,"mtime":1612479016640,"results":"37","hashOfConfig":"27"},{"size":268,"mtime":1612479016640,"results":"38","hashOfConfig":"27"},{"size":454,"mtime":1612479016640,"results":"39","hashOfConfig":"27"},{"size":1862,"mtime":1612479016636,"results":"40","hashOfConfig":"27"},{"size":380,"mtime":1612479016640,"results":"41","hashOfConfig":"27"},{"size":1142,"mtime":1612479016640,"results":"42","hashOfConfig":"27"},{"size":702,"mtime":1612479016640,"results":"43","hashOfConfig":"27"},{"size":1883,"mtime":1612479016640,"results":"44","hashOfConfig":"27"},{"size":8359,"mtime":1612479016640,"results":"45","hashOfConfig":"27"},{"size":260,"mtime":1612479016636,"results":"46","hashOfConfig":"27"},{"size":2705,"mtime":1612479016640,"results":"47","hashOfConfig":"27"},{"size":221,"mtime":1612479016640,"results":"48","hashOfConfig":"27"},{"size":3883,"mtime":1612479016640,"results":"49","hashOfConfig":"27"},{"size":591,"mtime":1612479016640,"results":"50","hashOfConfig":"27"},{"size":266,"mtime":1612479016640,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"13ca5vf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js",[],["112","113"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/Header.jsx",["114"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Title from \"./Title\";\nimport SocialMedia from \"./SocialMedia\";\n\nimport \"../../css/Header/Header.css\";\n\nconst Header = () => {\n  return (\n    <header className=\"header_container\">\n      <Title />\n      {/* <SocialMedia /> */}\n      <Link to=\"/admin\" className=\"admin_btn\">\n        ADMIN\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/Title.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Header/SocialMedia.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Home.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Admin.jsx",["115"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ProjectList from \"../Project/ProjectList\";\nimport \"../../css/Admin/Admin.css\";\nimport { getAllProjects } from \"../../redux/actions/projectActions\";\nimport { AddIcon } from \"../../utils/svg\";\n\nconst Admin = ({ projects, getAllProjects }) => {\n  useEffect(() => {\n    getAllProjects();\n  }, [window.location]);\n\n  return (\n    <section className=\"admin_page_container\">\n      <h2 className=\"list_title\">Ajouter un nouveau projet</h2>\n      <Link to=\"/createProject\" className=\"list_container add_list\">\n        <AddIcon cssClass=\"add_icon\" />\n      </Link>\n      <h2 className=\"list_title\">Mes projets</h2>\n      <span>(Cliquez sur un projet pour l'Ã©diter)</span>\n      {projects.map((project) => (\n        <ProjectList\n          id={project.project_id}\n          name={project.project_name}\n          link={project.project_link}\n          duration={project.project_duration}\n          client={project.client_name}\n          background={project.background}\n        />\n      ))}\n    </section>\n  );\n};\nconst mapStateToProps = ({ projects }) => ({\n  projects,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProjects: getAllProjects(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/AdminButtons.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/ManageProject.jsx",[],["116","117"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx",["118","119"],"import { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Home from \"./components/Home/Home\";\nimport Admin from \"./components/Admin/Admin\";\nimport CreateProject from \"./components/Project/CreateProject\";\n\nimport { getAllLanguages } from \"./redux/actions/languageActions\";\nimport { getAllProjects } from \"./redux/actions/projectActions\";\n\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header/Header\";\nimport axios from \"axios\";\nimport ProjectDetails from \"./components/Home/ProjectDetails\";\n\nconst App = ({ projects, getAllLanguages, getAllProjects }) => {\n  useEffect(() => {\n    getAllLanguages();\n    getAllProjects();\n  }, []);\n  // console.log(projects);\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/createProject\" component={CreateProject} />\n          <Route path=\"/editProject/:id\" component={CreateProject} />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ projects }) => ({\n  projects,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProjects: getAllProjects(dispatch),\n  getAllLanguages: getAllLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/NewLanguageForm.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx",["120"],"import axios from \"axios\";\n\nexport const getAllProjects = (dispatch) => async () => {\n  dispatch({\n    type: \"GET_ALL_PROJECTS_REQUEST\",\n  });\n  let arrId = [];\n  const result = await axios.get(`${process.env.REACT_APP_API}/projects`);\n  const { data } = result;\n  if (data) {\n    data.map(\n      (data) =>\n        (arrId = axios.get(\n          `${process.env.REACT_APP_API}/jlp/${data.project_id}`\n        ))\n    );\n  }\n  dispatch({\n    type: \"GET_ALL_PROJECTS_RESULT\",\n    payload: data,\n  });\n};\n\nexport const addProject = (dispatch) => async (projectId) => {\n  dispatch({\n    type: \"ADD_PROJECT_REQUEST\",\n  });\n  const result = await axios.get(\n    `${process.env.REACT_APP_API}/projects/${projectId}`\n  );\n  const { data } = result;\n  dispatch({\n    type: \"ADD_PROJECT_RESULT\",\n    payload: data,\n  });\n};\n\nexport const setProject = (dispatch) => async (allProjects) => {\n  dispatch({\n    type: \"SET_PROJECT\",\n    payload: allProjects,\n  });\n};\n\nexport const deleteProject = (dispatch) => async (projects, projectId) => {\n  dispatch({\n    type: \"DELETE_PROJECT\",\n    payload: projects.filter((e) => e.project_id !== projectId),\n  });\n};\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx",["121"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../css/Project/ProjectPreview.css\";\n\nconst ProjectPreview = ({ name, link, duration, client, background }) => {\n  return (\n    <div\n      className=\"preview_container\"\n      style={\n        background\n          ? { background: `url(${background})`, backgroundSize: \"cover\", animation: 'backMove 150s infinite' }\n          : { backgroundColor: \"rgb(0,0,0,0.5)\" }\n      }\n    >\n      <h3 className=\"project_title_preview\">{name}</h3>\n      <a href={link} target=\"_blank\" rel=\"noreferrer\">\n        {link}\n      </a>\n      <span>{duration}</span>\n      <span>{client}</span>\n    </div>\n  );\n};\n\nexport default ProjectPreview;\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/CreateProject.jsx",["122","123","124","125","126"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NewLanguageForm from \"../Admin/NewLanguageForm\";\n\nimport \"../../css/Project/CreateProject.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  getProjectLanguages,\n  setProjectLanguages,\n} from \"../../redux/actions/joinLanguageProjectActions\";\n\nconst CreateProject = ({\n  projects,\n  languages,\n  match,\n  getProjectLanguages,\n  setProjectLanguages,\n  projectLanguages,\n}) => {\n  const editId = +match.params.id;\n  const [redirect, setRedirect] = useState(false);\n  const [currentProject, setCurrentProject] = useState({});\n  const [projectData, setProjectData] = useState({\n    name: \"\",\n    link: \"\",\n    duration: \"\",\n    background: \"\",\n  });\n  const [languageData, setLanguageData] = useState([]);\n  const [clientData, setClientData] = useState({ name: \"\" });\n\n  const handleProjectChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({\n        ...currentProject,\n        [event.target.name]: event.target.value,\n      });\n    } else {\n      setProjectData({ ...projectData, [event.target.id]: event.target.value });\n    }\n  };\n\n  const handleLanguageChange = (event) => {\n    if (event.target.checked) {\n      setProjectLanguages([\n        ...projectLanguages,\n        { id: +event.target.id, name: event.target.value },\n      ]);\n    } else {\n      setProjectLanguages(\n        projectLanguages.filter((lang) => lang.id !== +event.target.id)\n      );\n    }\n  };\n\n  const handleClientChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({ ...currentProject, client_name: event.target.value });\n    } else {\n      setClientData({ name: event.target.value });\n    }\n  };\n\n  const handleClear = () => {\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n    if (currentProject) {\n      const projectResult = await axios.put(\n        `${process.env.REACT_APP_API}/projects/${editId}`,\n        {\n          name: currentProject.project_name,\n          link: currentProject.project_link,\n          duration: currentProject.project_duration,\n          background: currentProject.background,\n        }\n      );\n      // const dataProject = projectResult.data;\n      const reset = await axios.delete(\n        `${process.env.REACT_APP_API}/jlp/project/${editId}`\n      );\n      if (reset.status === 200) {\n        projectLanguages.map((lang) =>\n          axios.post(`${process.env.REACT_APP_API}/jlp`, {\n            id_language: lang.id,\n            id_project: editId,\n          })\n        );\n      }\n      const clientResult = await axios.put(\n        `${process.env.REACT_APP_API}/clients/${currentProject.client_id}`,\n        { name: currentProject.client_name }\n      );\n      // const dataClient = clientResult.data;\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const projectResult = await axios.post(\n      `${process.env.REACT_APP_API}/projects`,\n      projectData\n    );\n    const dataProject = projectResult.data;\n    projectLanguages.map((lang) =>\n      axios.post(`${process.env.REACT_APP_API}/jlp`, {\n        id_language: lang.id,\n        id_project: dataProject.id,\n      })\n    );\n    const clientResult = await axios.post(\n      `${process.env.REACT_APP_API}/clients`,\n      clientData\n    );\n    const dataClient = clientResult.data;\n\n    if (dataProject.id !== null && dataClient.id !== null) {\n      axios.post(`${process.env.REACT_APP_API}/jcp`, {\n        id_project: dataProject.id,\n        id_client: dataClient.id,\n      });\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    if (editId) {\n      setCurrentProject(\n        projects.filter((project) => project.project_id === editId)[0]\n      );\n      getProjectLanguages(editId);\n    } else {\n      setCurrentProject(null);\n    }\n  }, [editId]);\n\n  console.log(projectLanguages);\n  return (\n    <div className=\"admin_page_container\">\n      <h2>{editId ? \"Modifier un projet\" : \"CrÃ©er un projet\"}</h2>\n      <form className=\"form_container\">\n        <div\n          className=\"project_form\"\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <h3 className=\"form_subtitle\">Projet :</h3>\n          <label htmlFor=\"project_name\" className=\"form_label\">\n            Nom du projet :\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"project_name\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.project_name : projectData.name\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"project_link\" className=\"form_label\">\n            Lien vers le projet :\n            <input\n              type=\"text\"\n              id=\"link\"\n              name=\"project_link\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.project_link : projectData.link\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"project_duration\" className=\"form_label\">\n            DurÃ©e du dÃ©veloppement :\n            <input\n              type=\"text\"\n              id=\"duration\"\n              name=\"project_duration\"\n              className=\"form_input\"\n              value={\n                currentProject\n                  ? currentProject.project_duration\n                  : projectData.duration\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"background\" className=\"form_label\">\n            Image de couverture :\n            <input\n              type=\"text\"\n              id=\"background\"\n              name=\"background\"\n              className=\"form_input\"\n              value={\n                currentProject\n                  ? currentProject.background\n                  : projectData.background\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n        </div>\n        <div className=\"language_form\">\n          <h3 className=\"form_subtitle\">Technologies utilisÃ©es :</h3>\n          {languages.map((lang) => (\n            <label htmlFor=\"project_language\" className=\"checkbox_label\">\n              <input\n                type=\"checkbox\"\n                name=\"project_language\"\n                id={lang.id}\n                value={lang.name}\n                checked={projectLanguages.find((e) => e.id === +lang.id)}\n                onChange={handleLanguageChange}\n              />\n              <span>{lang.name}</span>\n            </label>\n          ))}\n          <NewLanguageForm />\n        </div>\n        <div className=\"client_form\">\n          <h3 className=\"form_subtitle\">Client :</h3>\n          <label htmlFor=\"project_client\" className=\"form_label\">\n            Client :\n            <input\n              type=\"text\"\n              name=\"project_client\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.client_name : clientData.name\n              }\n              onChange={handleClientChange}\n            />\n          </label>\n        </div>\n      </form>\n      <div className=\"form_btn_container\">\n        {currentProject ? (\n          <button type=\"button\" className=\"form_btn\" onClick={handleEditSubmit}>\n            Confirmer\n          </button>\n        ) : (\n          <button type=\"button\" className=\"form_btn\" onClick={handleSubmit}>\n            Confirmer\n          </button>\n        )}\n        <Link to=\"/admin\" onClick={handleClear}>\n          <button className=\"form_btn\">Annuler</button>\n        </Link>\n        {redirect && <Redirect to=\"/admin\" />}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ languages, projects, projectLanguages }) => ({\n  languages,\n  projects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n  setProjectLanguages: setProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Footer.jsx",["127"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer_container\">\n      <p>Copyright to myself</p>\n      \n    </footer>\n  );\n};\n\nexport default Footer;\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/ProjectDetails.jsx",["128","129","130"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProjectPreview from \"../Project/ProjectPreview\";\nimport LoadingSpinner from \"../_reusable/LoadingSpinner\";\n\nimport { getProjectLanguages } from \"../../redux/actions/joinLanguageProjectActions\";\n\nimport \"../../css/Home/ProjectDetails.css\";\nimport { Link } from \"react-router-dom\";\nimport { ArrowIcon } from \"../../utils/svg\";\nimport projectLanguages from \"../../redux/reducers/joinLanguageProjectReducer\";\n\nconst ProjectDetails = ({\n  projects,\n  match,\n  getProjectLanguages,\n  projectLanguages,\n}) => {\n  const { id } = match.params;\n  const [loading, setLoading] = useState(true);\n  const [currentProject, setCurrentProject] = useState();\n\n  useEffect(() => {\n    if (projects) {\n      setCurrentProject(projects.find((project) => project.project_id === +id));\n      getProjectLanguages(+id);\n    }\n    setLoading(false);\n  }, [projects]);\n\n  console.log(projectLanguages);\n  return (\n    <>\n      <Link to=\"/\" className=\"back_btn\">\n        <ArrowIcon cssClass=\"back_icon\" />\n      </Link>\n      <div className=\"project_details_container\">\n        {loading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <ProjectPreview\n              background={currentProject.background}\n              name={currentProject.project_name}\n            />\n            <div className=\"info_container\">\n              <h2 className=\"info_project_title\">\n                {currentProject.project_name}\n              </h2>\n              <span className=\"info_title\">Lien vers l'application : </span>\n              <a\n                href={currentProject.project_link}\n                target=\"_blank\"\n                className=\"info_value\"\n              >\n                {currentProject.project_link}\n              </a>\n              <span className=\"info_title\">DurÃ©e du projet : </span>\n              <span className=\"info_value\">\n                {currentProject.client_duration}\n              </span>\n              <span className=\"info_title\">Client : </span>\n              <span className=\"info_value\">{currentProject.client_name}</span>\n              <span className=\"info_title\">Technologies utilisÃ©es : </span>\n              {projectLanguages.map((lang) => (\n                <span className=\"info_value\">{lang.name}</span>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ projects, projectLanguages }) => ({\n  projects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":12,"column":6,"nodeType":"141","endLine":12,"endColumn":23,"suggestions":"142"},{"ruleId":"131","replacedBy":"143"},{"ruleId":"133","replacedBy":"144"},{"ruleId":"135","severity":1,"message":"145","line":15,"column":8,"nodeType":"137","messageId":"138","endLine":15,"endColumn":13},{"ruleId":"139","severity":1,"message":"146","line":22,"column":6,"nodeType":"141","endLine":22,"endColumn":8,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":15},{"ruleId":"135","severity":1,"message":"149","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"150","line":31,"column":10,"nodeType":"137","messageId":"138","endLine":31,"endColumn":22},{"ruleId":"135","severity":1,"message":"151","line":31,"column":24,"nodeType":"137","messageId":"138","endLine":31,"endColumn":39},{"ruleId":"135","severity":1,"message":"152","line":75,"column":13,"nodeType":"137","messageId":"138","endLine":75,"endColumn":26},{"ruleId":"135","severity":1,"message":"153","line":96,"column":13,"nodeType":"137","messageId":"138","endLine":96,"endColumn":25},{"ruleId":"139","severity":1,"message":"154","line":145,"column":6,"nodeType":"141","endLine":145,"endColumn":14,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"149","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"156","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":24},{"ruleId":"139","severity":1,"message":"157","line":29,"column":6,"nodeType":"141","endLine":29,"endColumn":16,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":51,"column":15,"nodeType":"161","endLine":55,"endColumn":16},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'SocialMedia' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllProjects'. Either include it or remove the dependency array. Outer scope values like 'window.location' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["164"],["162"],["163"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllLanguages' and 'getAllProjects'. Either include them or remove the dependency array. If 'getAllLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"'arrId' is assigned a value but never used.","'Link' is defined but never used.","'languageData' is assigned a value but never used.","'setLanguageData' is assigned a value but never used.","'projectResult' is assigned a value but never used.","'clientResult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProjectLanguages' and 'projects'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"'projectLanguages' is defined but never used.","React Hook useEffect has missing dependencies: 'getProjectLanguages' and 'id'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getAllProjects]",{"range":"176","text":"177"},"Update the dependencies array to be: [getAllLanguages, getAllProjects]",{"range":"178","text":"179"},"Update the dependencies array to be: [editId, getProjectLanguages, projects]",{"range":"180","text":"181"},"Update the dependencies array to be: [getProjectLanguages, id, projects]",{"range":"182","text":"183"},[418,435],"[getAllProjects]",[749,751],"[getAllLanguages, getAllProjects]",[4073,4081],"[editId, getProjectLanguages, projects]",[927,937],"[getProjectLanguages, id, projects]"]