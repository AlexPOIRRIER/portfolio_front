[{"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js":"1","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx":"2","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx":"3","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx":"4","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx":"5","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx":"6","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx":"7","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx":"8","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx":"9","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx":"10","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx":"11","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx":"12","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx":"13","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx":"14","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectDetails.jsx":"15","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Footer.jsx":"16","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Header.jsx":"17","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Title.jsx":"18","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/NewLanguageForm.jsx":"19","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home.jsx":"20","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin.jsx":"21","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Contact.jsx":"22","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/PopUp.jsx":"23","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/ConfirmCancelButtons.jsx":"24","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/popupReducer.jsx":"25","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/popupActions.jsx":"26","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/messageReducer.jsx":"27","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/messageActions.jsx":"28","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/ProjectForm.jsx":"29","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/SocialMedia.jsx":"30","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessageList.jsx":"31","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessagePreview.jsx":"32","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessageDetails.jsx":"33"},{"size":362,"mtime":1612345809628,"results":"34","hashOfConfig":"35"},{"size":1094,"mtime":1612479016640,"results":"36","hashOfConfig":"35"},{"size":1740,"mtime":1612731139774,"results":"37","hashOfConfig":"35"},{"size":449,"mtime":1612722932505,"results":"38","hashOfConfig":"35"},{"size":274,"mtime":1612627103879,"results":"39","hashOfConfig":"35"},{"size":454,"mtime":1612479016640,"results":"40","hashOfConfig":"35"},{"size":386,"mtime":1612627427076,"results":"41","hashOfConfig":"35"},{"size":1160,"mtime":1612699821095,"results":"42","hashOfConfig":"35"},{"size":640,"mtime":1612550135494,"results":"43","hashOfConfig":"35"},{"size":2259,"mtime":1612726675207,"results":"44","hashOfConfig":"35"},{"size":221,"mtime":1612479016640,"results":"45","hashOfConfig":"35"},{"size":4988,"mtime":1612550135498,"results":"46","hashOfConfig":"35"},{"size":621,"mtime":1612724444437,"results":"47","hashOfConfig":"35"},{"size":266,"mtime":1612724331501,"results":"48","hashOfConfig":"35"},{"size":2622,"mtime":1612627687275,"results":"49","hashOfConfig":"35"},{"size":226,"mtime":1612550135494,"results":"50","hashOfConfig":"35"},{"size":601,"mtime":1612727136719,"results":"51","hashOfConfig":"35"},{"size":351,"mtime":1612550135494,"results":"52","hashOfConfig":"35"},{"size":1782,"mtime":1612697259692,"results":"53","hashOfConfig":"35"},{"size":849,"mtime":1612627603906,"results":"54","hashOfConfig":"35"},{"size":1509,"mtime":1612728245925,"results":"55","hashOfConfig":"35"},{"size":2609,"mtime":1612726709582,"results":"56","hashOfConfig":"35"},{"size":400,"mtime":1612579668733,"results":"57","hashOfConfig":"35"},{"size":1084,"mtime":1612726350530,"results":"58","hashOfConfig":"35"},{"size":346,"mtime":1612725889165,"results":"59","hashOfConfig":"35"},{"size":290,"mtime":1612726629012,"results":"60","hashOfConfig":"35"},{"size":547,"mtime":1612727862278,"results":"61","hashOfConfig":"35"},{"size":744,"mtime":1612727718694,"results":"62","hashOfConfig":"35"},{"size":8155,"mtime":1612724620175,"results":"63","hashOfConfig":"35"},{"size":782,"mtime":1612698980877,"results":"64","hashOfConfig":"35"},{"size":681,"mtime":1612731224547,"results":"65","hashOfConfig":"35"},{"size":1253,"mtime":1612732647339,"results":"66","hashOfConfig":"35"},{"size":503,"mtime":1612731374335,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"13ca5vf",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js",[],["140","141"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx",["142"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx",["143"],"import axios from \"axios\";\n\nexport const getAllProjects = (dispatch) => async () => {\n  dispatch({\n    type: \"GET_ALL_PROJECTS_REQUEST\",\n  });\n  let arrId = [];\n  const result = await axios.get(`${process.env.REACT_APP_API}/projects`);\n  const { data } = result;\n  if (data) {\n    data.map(\n      (data) =>\n        (arrId = axios.get(\n          `${process.env.REACT_APP_API}/jlp/${data.project_id}`\n        ))\n    );\n  }\n  dispatch({\n    type: \"GET_ALL_PROJECTS_RESULT\",\n    payload: data,\n  });\n};\n\nexport const addProject = (dispatch) => async (projectId) => {\n  dispatch({\n    type: \"ADD_PROJECT_REQUEST\",\n  });\n  const result = await axios.get(\n    `${process.env.REACT_APP_API}/projects/${projectId}`\n  );\n  const { data } = result;\n  dispatch({\n    type: \"ADD_PROJECT_RESULT\",\n    payload: data,\n  });\n};\n\n// export const setProject = (dispatch) => async (allProjects) => {\n//   dispatch({\n//     type: \"SET_PROJECT\",\n//     payload: allProjects,\n//   });\n// };\n\nexport const deleteProject = (dispatch) => async (projects, projectId) => {\n  dispatch({\n    type: \"DELETE_PROJECT\",\n    payload: projects.filter((e) => e.project_id !== projectId),\n  });\n};\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectDetails.jsx",["144","145"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProjectPreview from \"./ProjectPreview\";\nimport LoadingSpinner from \"../_reusable/LoadingSpinner\";\n\nimport { getProjectLanguages } from \"../../redux/actions/joinLanguageProjectActions\";\n\nimport \"../../css/Project/ProjectDetails.css\";\n\nimport { ArrowIcon } from \"../../utils/svg\";\n\nconst ProjectDetails = ({\n  match,\n  allProjects,\n  projectLanguages,\n  getProjectLanguages,\n}) => {\n  const { id } = match.params;\n  const [loading, setLoading] = useState(true);\n  const [currentProject, setCurrentProject] = useState();\n\n  useEffect(() => {\n    if (allProjects) {\n      setCurrentProject(\n        allProjects.find((project) => project.project_id === +id)\n      );\n      getProjectLanguages(+id);\n    }\n    setLoading(false);\n  }, [allProjects]);\n\n  return (\n    <>\n      <Link to=\"/\" className=\"back_btn\">\n        <ArrowIcon cssClass=\"back_icon\" />\n      </Link>\n      <div className=\"project_details_container\">\n        {loading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <ProjectPreview\n              background={currentProject.background}\n              name={currentProject.project_name}\n            />\n            <div className=\"info_container\">\n              <h2 className=\"info_project_title\">\n                {currentProject.project_name}\n              </h2>\n              <span className=\"info_title\">Lien vers l'application : </span>\n              <a\n                href={currentProject.project_link}\n                target=\"_blank\"\n                className=\"info_value\"\n              >\n                {currentProject.project_link}\n              </a>\n              <span className=\"info_title\">Durée du projet : </span>\n              <span className=\"info_value\">\n                {currentProject.project_duration}\n              </span>\n              <span className=\"info_title\">Client : </span>\n              <span className=\"info_value\">{currentProject.client_name}</span>\n              <span className=\"info_title\">Technologies utilisées : </span>\n              {projectLanguages.map((lang) => (\n                <span className=\"info_value\">{lang.name}</span>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ allProjects, projectLanguages }) => ({\n  allProjects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Footer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Header.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Title.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/NewLanguageForm.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin.jsx",["146"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { getAllProjects } from \"../redux/actions/projectActions\";\nimport { getAllMessages } from \"../redux/actions/messageActions\";\n\nimport ProjectList from \"./Project/ProjectList\";\n\nimport { AddIcon } from \"../utils/svg\";\n\nimport \"../css/Admin.css\";\n\nconst Admin = ({ allProjects, getAllProjects, getAllMessages }) => {\n  useEffect(() => {\n    getAllProjects();\n    getAllMessages();\n  }, [window.location.pathname]);\n\n  return (\n    <section className=\"admin_page_container\">\n      <h2 className=\"list_title\">Ajouter un nouveau projet</h2>\n      <Link to=\"/createProject\" className=\"list_container add_list\">\n        <AddIcon cssClass=\"add_icon\" />\n      </Link>\n      <h2 className=\"list_title\">Mes projets</h2>\n      <span>(Cliquez sur un projet pour l'éditer)</span>\n      {allProjects.map((project) => (\n        <ProjectList\n          id={project.project_id}\n          name={project.project_name}\n          link={project.project_link}\n          duration={project.project_duration}\n          client={project.client_name}\n          background={project.background}\n        />\n      ))}\n    </section>\n  );\n};\nconst mapStateToProps = ({ allProjects }) => ({\n  allProjects,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProjects: getAllProjects(dispatch),\n  getAllMessages: getAllMessages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Contact.jsx",["147"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setPopUp } from \"../redux/actions/popupActions\";\nimport { setNewMessage } from \"../redux/actions/messageActions\";\n\nimport PopUp from \"./_reusable/PopUp\";\n\nimport \"../css/Contact.css\";\nimport axios from \"axios\";\n\nconst Contact = ({\n  newMessage,\n  setNewMessage,\n  popUp,\n  setPopUp,\n  setPopUpFunction,\n}) => {\n  const handleSubmit = async () => {\n    const result = await axios.post(\n      `${process.env.REACT_APP_API}/messages`,\n      newMessage\n    );\n    console.log(result);\n  };\n  const handleChange = (event) => {\n    setNewMessage({ ...newMessage, [event.target.name]: event.target.value });\n    console.log(newMessage);\n  };\n\n  const handlePopUp = () => {\n    setPopUp(true, handleSubmit);\n  };\n\n  return (\n    <form className=\"contact_form\">\n      <label htmlFor=\"name\" className=\"form_label\">\n        Nom :\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"form_input\"\n          placeholder=\"Votre nom\"\n          value={newMessage.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"email\" className=\"form_label\">\n        E-mail :\n        <input\n          type=\"email\"\n          name=\"email\"\n          className=\"form_input\"\n          placeholder=\"Votre adresse e-mail\"\n          value={newMessage.email}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"subject\" className=\"form_label\">\n        Sujet :\n        <input\n          type=\"text\"\n          name=\"subject\"\n          className=\"form_input\"\n          placeholder=\"Sujet du message\"\n          value={newMessage.subject}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"message\" className=\"form_label\">\n        Message :\n        <textarea\n          name=\"message\"\n          className=\"form_input\"\n          placeholder=\"Votre message ...\"\n          value={newMessage.message}\n          onChange={handleChange}\n          style={{ height: \"12rem\", width: \"20rem\", resize: \"none\" }}\n        />\n      </label>\n      <button\n        type=\"button\"\n        className=\"form_btn\"\n        onClick={() => setPopUp(true, handleSubmit)}\n      >\n        Envoyer\n      </button>\n      {popUp.toggle && <PopUp text={\"Confirmer l'envoi du message ?\"} />}\n    </form>\n  );\n};\n\nconst mapStateToProps = ({ newMessage, popUp }) => ({\n  newMessage,\n  popUp,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNewMessage: setNewMessage(dispatch),\n  setPopUp: setPopUp(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/PopUp.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/ConfirmCancelButtons.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/popupReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/popupActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/messageReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/messageActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/ProjectForm.jsx",["148"],"import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport {\n  getProjectLanguages,\n  setProjectLanguages,\n} from \"../../../redux/actions/joinLanguageProjectActions\";\n\nimport NewLanguageForm from \"./NewLanguageForm\";\n\nimport \"../../../css/Project/Forms/ProjectForm.css\";\n\nconst ProjectForm = ({\n  match,\n  allProjects,\n  allLanguages,\n  projectLanguages,\n  getProjectLanguages,\n  setProjectLanguages,\n}) => {\n  const editId = +match.params.id;\n  const [redirect, setRedirect] = useState(false);\n  const [currentProject, setCurrentProject] = useState({});\n  const [projectData, setProjectData] = useState({\n    name: \"\",\n    link: \"\",\n    duration: \"\",\n    background: \"\",\n  });\n  const [clientData, setClientData] = useState({ name: \"\" });\n\n  const handleProjectChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({\n        ...currentProject,\n        [event.target.name]: event.target.value,\n      });\n    } else {\n      setProjectData({ ...projectData, [event.target.id]: event.target.value });\n    }\n  };\n\n  const handleLanguageChange = (event) => {\n    if (event.target.checked) {\n      setProjectLanguages([\n        ...projectLanguages,\n        { id: +event.target.id, name: event.target.value },\n      ]);\n    } else {\n      setProjectLanguages(\n        projectLanguages.filter((lang) => lang.id !== +event.target.id)\n      );\n    }\n  };\n\n  const handleClientChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({ ...currentProject, client_name: event.target.value });\n    } else {\n      setClientData({ name: event.target.value });\n    }\n  };\n\n  const handleClear = () => {\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n    if (currentProject) {\n      await axios.put(`${process.env.REACT_APP_API}/projects/${editId}`, {\n        name: currentProject.project_name,\n        link: currentProject.project_link,\n        duration: currentProject.project_duration,\n        background: currentProject.background,\n      });\n      const reset = await axios.delete(\n        `${process.env.REACT_APP_API}/jlp/project/${editId}`\n      );\n      if (reset.status === 200) {\n        projectLanguages.map((lang) =>\n          axios.post(`${process.env.REACT_APP_API}/jlp`, {\n            id_language: lang.id,\n            id_project: editId,\n          })\n        );\n      }\n      await axios.put(\n        `${process.env.REACT_APP_API}/clients/${currentProject.client_id}`,\n        { name: currentProject.client_name }\n      );\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const projectResult = await axios.post(\n      `${process.env.REACT_APP_API}/projects`,\n      projectData\n    );\n    const dataProject = projectResult.data;\n    projectLanguages.map((lang) =>\n      axios.post(`${process.env.REACT_APP_API}/jlp`, {\n        id_language: lang.id,\n        id_project: dataProject.id,\n      })\n    );\n    const clientResult = await axios.post(\n      `${process.env.REACT_APP_API}/clients`,\n      clientData\n    );\n    const dataClient = clientResult.data;\n\n    if (dataProject.id !== null && dataClient.id !== null) {\n      axios.post(`${process.env.REACT_APP_API}/jcp`, {\n        id_project: dataProject.id,\n        id_client: dataClient.id,\n      });\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    if (editId) {\n      setCurrentProject(\n        allProjects.filter((project) => project.project_id === editId)[0]\n      );\n      getProjectLanguages(editId);\n    } else {\n      setCurrentProject(null);\n    }\n  }, [editId]);\n\n  console.log(projectLanguages);\n  return (\n    <div className=\"admin_page_container\">\n      <h2>{editId ? \"Modifier un projet\" : \"Créer un projet\"}</h2>\n      <form className=\"form_container\">\n        <div\n          className=\"project_form\"\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <h3 className=\"form_subtitle\">Projet :</h3>\n          <label htmlFor=\"project_name\" className=\"form_label\">\n            Nom du projet :\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"project_name\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.project_name : projectData.name\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"project_link\" className=\"form_label\">\n            Lien vers le projet :\n            <input\n              type=\"text\"\n              id=\"link\"\n              name=\"project_link\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.project_link : projectData.link\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"project_duration\" className=\"form_label\">\n            Durée du développement :\n            <input\n              type=\"text\"\n              id=\"duration\"\n              name=\"project_duration\"\n              className=\"form_input\"\n              value={\n                currentProject\n                  ? currentProject.project_duration\n                  : projectData.duration\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n          <label htmlFor=\"background\" className=\"form_label\">\n            Image de couverture :\n            <input\n              type=\"text\"\n              id=\"background\"\n              name=\"background\"\n              className=\"form_input\"\n              value={\n                currentProject\n                  ? currentProject.background\n                  : projectData.background\n              }\n              onChange={handleProjectChange}\n            />\n          </label>\n        </div>\n        <div className=\"language_form\">\n          <h3 className=\"form_subtitle\">Technologies utilisées :</h3>\n          {allLanguages.map((lang) => (\n            <label htmlFor=\"project_language\" className=\"checkbox_label\">\n              <input\n                type=\"checkbox\"\n                name=\"project_language\"\n                id={lang.id}\n                value={lang.name}\n                checked={projectLanguages.find((e) => e.id === +lang.id)}\n                onChange={handleLanguageChange}\n              />\n              <span>{lang.name}</span>\n            </label>\n          ))}\n          <NewLanguageForm />\n        </div>\n        <div className=\"client_form\">\n          <h3 className=\"form_subtitle\">Client :</h3>\n          <label htmlFor=\"project_client\" className=\"form_label\">\n            Client :\n            <input\n              type=\"text\"\n              name=\"project_client\"\n              className=\"form_input\"\n              value={\n                currentProject ? currentProject.client_name : clientData.name\n              }\n              onChange={handleClientChange}\n            />\n          </label>\n        </div>\n      </form>\n      <div className=\"form_btn_container\">\n        {currentProject ? (\n          <button type=\"button\" className=\"form_btn\" onClick={handleEditSubmit}>\n            Confirmer\n          </button>\n        ) : (\n          <button type=\"button\" className=\"form_btn\" onClick={handleSubmit}>\n            Confirmer\n          </button>\n        )}\n        <Link to=\"/admin\" onClick={handleClear}>\n          <button className=\"form_btn\">Annuler</button>\n        </Link>\n        {redirect && <Redirect to=\"/admin\" />}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ allLanguages, allProjects, projectLanguages }) => ({\n  allLanguages,\n  allProjects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n  setProjectLanguages: setProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/SocialMedia.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessageList.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessagePreview.jsx",["149"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Message/MessageDetails.jsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":13,"column":10,"nodeType":"160","messageId":"161","endLine":13,"endColumn":15},{"ruleId":"154","severity":1,"message":"162","line":31,"column":6,"nodeType":"156","endLine":31,"endColumn":19,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":52,"column":15,"nodeType":"166","endLine":56,"endColumn":16},{"ruleId":"154","severity":1,"message":"167","line":18,"column":6,"nodeType":"156","endLine":18,"endColumn":32,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"169","line":31,"column":9,"nodeType":"160","messageId":"161","endLine":31,"endColumn":20},{"ruleId":"154","severity":1,"message":"170","line":141,"column":6,"nodeType":"156","endLine":141,"endColumn":14,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"172","line":7,"column":42,"nodeType":"160","messageId":"161","endLine":7,"endColumn":50},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllLanguages' and 'getAllProjects'. Either include them or remove the dependency array. If 'getAllLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["175"],"no-unused-vars","'arrId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getProjectLanguages' and 'id'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["176"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getAllMessages' and 'getAllProjects'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["177"],"'handlePopUp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allProjects' and 'getProjectLanguages'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["178"],"'answered' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [getAllLanguages, getAllProjects]",{"range":"187","text":"188"},"Update the dependencies array to be: [allProjects, getProjectLanguages, id]",{"range":"189","text":"190"},"Update the dependencies array to be: [getAllMessages, getAllProjects]",{"range":"191","text":"192"},"Update the dependencies array to be: [allProjects, editId, getProjectLanguages]",{"range":"193","text":"194"},[898,900],"[getAllLanguages, getAllProjects]",[867,880],"[allProjects, getProjectLanguages, id]",[513,539],"[getAllMessages, getAllProjects]",[3856,3864],"[allProjects, editId, getProjectLanguages]"]