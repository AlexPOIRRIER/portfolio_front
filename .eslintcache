[{"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js":"1","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx":"2","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx":"3","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx":"4","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx":"5","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx":"6","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx":"7","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx":"8","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx":"9","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx":"10","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx":"11","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx":"12","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx":"13","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx":"14","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectDetails.jsx":"15","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Footer.jsx":"16","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Title.jsx":"17","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/NewLanguageForm.jsx":"18","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/PopUp.jsx":"19","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/ConfirmCancelButtons.jsx":"20","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/popupReducer.jsx":"21","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/popupActions.jsx":"22","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/messageReducer.jsx":"23","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/messageActions.jsx":"24","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/ProjectForm.jsx":"25","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/SocialMedia.jsx":"26","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Contact.jsx":"27","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Home.jsx":"28","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Admin.jsx":"29","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessageDetails.jsx":"30","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessagePreview.jsx":"31","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessageList.jsx":"32","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/AdminHeader.jsx":"33","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/HomeHeader.jsx":"34","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/LogIn.jsx":"35","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/SideBar.jsx":"36"},{"size":362,"mtime":1612345809628,"results":"37","hashOfConfig":"38"},{"size":1094,"mtime":1612479016640,"results":"39","hashOfConfig":"38"},{"size":1870,"mtime":1612807461728,"results":"40","hashOfConfig":"38"},{"size":449,"mtime":1612722932505,"results":"41","hashOfConfig":"38"},{"size":274,"mtime":1612627103879,"results":"42","hashOfConfig":"38"},{"size":454,"mtime":1612479016640,"results":"43","hashOfConfig":"38"},{"size":386,"mtime":1612627427076,"results":"44","hashOfConfig":"38"},{"size":1160,"mtime":1612699821095,"results":"45","hashOfConfig":"38"},{"size":640,"mtime":1612550135494,"results":"46","hashOfConfig":"38"},{"size":2259,"mtime":1612772709007,"results":"47","hashOfConfig":"38"},{"size":221,"mtime":1612479016640,"results":"48","hashOfConfig":"38"},{"size":4988,"mtime":1612550135498,"results":"49","hashOfConfig":"38"},{"size":690,"mtime":1612777327143,"results":"50","hashOfConfig":"38"},{"size":266,"mtime":1612774332789,"results":"51","hashOfConfig":"38"},{"size":2701,"mtime":1612772649316,"results":"52","hashOfConfig":"38"},{"size":342,"mtime":1612793294019,"results":"53","hashOfConfig":"38"},{"size":351,"mtime":1612550135494,"results":"54","hashOfConfig":"38"},{"size":1776,"mtime":1612778325883,"results":"55","hashOfConfig":"38"},{"size":400,"mtime":1612579668733,"results":"56","hashOfConfig":"38"},{"size":1111,"mtime":1612777111129,"results":"57","hashOfConfig":"38"},{"size":346,"mtime":1612725889165,"results":"58","hashOfConfig":"38"},{"size":290,"mtime":1612726629012,"results":"59","hashOfConfig":"38"},{"size":547,"mtime":1612727862278,"results":"60","hashOfConfig":"38"},{"size":816,"mtime":1612773573269,"results":"61","hashOfConfig":"38"},{"size":8580,"mtime":1612777984250,"results":"62","hashOfConfig":"38"},{"size":782,"mtime":1612698980877,"results":"63","hashOfConfig":"38"},{"size":2823,"mtime":1612777138792,"results":"64","hashOfConfig":"38"},{"size":932,"mtime":1612772623613,"results":"65","hashOfConfig":"38"},{"size":1631,"mtime":1612778084074,"results":"66","hashOfConfig":"38"},{"size":543,"mtime":1612772847663,"results":"67","hashOfConfig":"38"},{"size":1256,"mtime":1612773452905,"results":"68","hashOfConfig":"38"},{"size":767,"mtime":1612772820004,"results":"69","hashOfConfig":"38"},{"size":457,"mtime":1612772584994,"results":"70","hashOfConfig":"38"},{"size":453,"mtime":1612777518881,"results":"71","hashOfConfig":"38"},{"size":1460,"mtime":1612804640933,"results":"72","hashOfConfig":"38"},{"size":391,"mtime":1612807350536,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"13ca5vf",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/reportWebVitals.js",[],["152","153"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/App.jsx",["154","155"],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/index.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/languageReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/languageActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/projectReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/projectActions.jsx",["156"],"import axios from \"axios\";\n\nexport const getAllProjects = (dispatch) => async () => {\n  dispatch({\n    type: \"GET_ALL_PROJECTS_REQUEST\",\n  });\n  let arrId = [];\n  const result = await axios.get(`${process.env.REACT_APP_API}/projects`);\n  const { data } = result;\n  if (data) {\n    data.map(\n      (data) =>\n        (arrId = axios.get(\n          `${process.env.REACT_APP_API}/jlp/${data.project_id}`\n        ))\n    );\n  }\n  dispatch({\n    type: \"GET_ALL_PROJECTS_RESULT\",\n    payload: data,\n  });\n};\n\nexport const addProject = (dispatch) => async (projectId) => {\n  dispatch({\n    type: \"ADD_PROJECT_REQUEST\",\n  });\n  const result = await axios.get(\n    `${process.env.REACT_APP_API}/projects/${projectId}`\n  );\n  const { data } = result;\n  dispatch({\n    type: \"ADD_PROJECT_RESULT\",\n    payload: data,\n  });\n};\n\n// export const setProject = (dispatch) => async (allProjects) => {\n//   dispatch({\n//     type: \"SET_PROJECT\",\n//     payload: allProjects,\n//   });\n// };\n\nexport const deleteProject = (dispatch) => async (projects, projectId) => {\n  dispatch({\n    type: \"DELETE_PROJECT\",\n    payload: projects.filter((e) => e.project_id !== projectId),\n  });\n};\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectPreview.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectList.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/LoadingSpinner.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/utils/svg.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/joinLanguageProjectActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/joinLanguageProjectReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/ProjectDetails.jsx",["157","158"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProjectPreview from \"./ProjectPreview\";\nimport LoadingSpinner from \"../_reusable/LoadingSpinner\";\n\nimport { getProjectLanguages } from \"../../redux/actions/joinLanguageProjectActions\";\n\nimport \"../../css/Project/ProjectDetails.css\";\n\nimport { ArrowIcon } from \"../../utils/svg\";\nimport HomeHeader from \"../Navigation/Header/HomeHeader\";\n\nconst ProjectDetails = ({\n  match,\n  allProjects,\n  projectLanguages,\n  getProjectLanguages,\n}) => {\n  const { id } = match.params;\n  const [loading, setLoading] = useState(true);\n  const [currentProject, setCurrentProject] = useState();\n\n  useEffect(() => {\n    if (allProjects) {\n      setCurrentProject(\n        allProjects.find((project) => project.project_id === +id)\n      );\n      getProjectLanguages(+id);\n    }\n    setLoading(false);\n  }, [allProjects]);\n\n  return (\n    <>\n      <HomeHeader />\n      <Link to=\"/\" className=\"back_btn\">\n        <ArrowIcon cssClass=\"back_icon\" />\n      </Link>\n      <div className=\"project_details_container\">\n        {loading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <ProjectPreview\n              background={currentProject.background}\n              name={currentProject.project_name}\n            />\n            <div className=\"info_container\">\n              <h2 className=\"info_project_title\">\n                {currentProject.project_name}\n              </h2>\n              <span className=\"info_title\">Lien vers l'application : </span>\n              <a\n                href={currentProject.project_link}\n                target=\"_blank\"\n                className=\"info_value\"\n              >\n                {currentProject.project_link}\n              </a>\n              <span className=\"info_title\">Durée du projet : </span>\n              <span className=\"info_value\">\n                {currentProject.project_duration}\n              </span>\n              <span className=\"info_title\">Client : </span>\n              <span className=\"info_value\">{currentProject.client_name}</span>\n              <span className=\"info_title\">Technologies utilisées : </span>\n              {projectLanguages.map((lang) => (\n                <span className=\"info_value\">{lang.name}</span>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ allProjects, projectLanguages }) => ({\n  allProjects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Footer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/Title.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/NewLanguageForm.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/PopUp.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/ConfirmCancelButtons.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/popupReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/popupActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/reducers/messageReducer.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/redux/actions/messageActions.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Project/Forms/ProjectForm.jsx",["159"],"import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { getProjectLanguages, setProjectLanguages } from \"../../../redux/actions/joinLanguageProjectActions\";\n\nimport NewLanguageForm from \"./NewLanguageForm\";\n\nimport \"../../../css/Project/Forms/ProjectForm.css\";\nimport AdminHeader from \"../../Navigation/Header/AdminHeader\";\n\nconst ProjectForm = ({\n  match,\n  allProjects,\n  allLanguages,\n  projectLanguages,\n  getProjectLanguages,\n  setProjectLanguages,\n}) => {\n  const editId = +match.params.id;\n  const [redirect, setRedirect] = useState(false);\n  const [currentProject, setCurrentProject] = useState({});\n  const [projectData, setProjectData] = useState({\n    name: \"\",\n    link: \"\",\n    duration: \"\",\n    background: \"\",\n  });\n  const [clientData, setClientData] = useState({ name: \"\" });\n\n  const handleProjectChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({\n        ...currentProject,\n        [event.target.name]: event.target.value,\n      });\n    } else {\n      setProjectData({ ...projectData, [event.target.id]: event.target.value });\n    }\n  };\n\n  const handleLanguageChange = (event) => {\n    if (event.target.checked) {\n      setProjectLanguages([\n        ...projectLanguages,\n        { id: +event.target.id, name: event.target.value },\n      ]);\n    } else {\n      setProjectLanguages(\n        projectLanguages.filter((lang) => lang.id !== +event.target.id)\n      );\n    }\n  };\n\n  const handleClientChange = (event) => {\n    if (currentProject) {\n      setCurrentProject({ ...currentProject, client_name: event.target.value });\n    } else {\n      setClientData({ name: event.target.value });\n    }\n  };\n\n  const handleClear = () => {\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n    if (currentProject) {\n      await axios.put(`${process.env.REACT_APP_API}/projects/${editId}`, {\n        name: currentProject.project_name,\n        link: currentProject.project_link,\n        duration: currentProject.project_duration,\n        background: currentProject.background,\n      });\n      const reset = await axios.delete(\n        `${process.env.REACT_APP_API}/jlp/project/${editId}`\n      );\n      if (reset.status === 200) {\n        projectLanguages.map((lang) =>\n          axios.post(`${process.env.REACT_APP_API}/jlp`, {\n            id_language: lang.id,\n            id_project: editId,\n          })\n        );\n      }\n      await axios.put(\n        `${process.env.REACT_APP_API}/clients/${currentProject.client_id}`,\n        { name: currentProject.client_name }\n      );\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const projectResult = await axios.post(\n      `${process.env.REACT_APP_API}/projects`,\n      projectData\n    );\n    const dataProject = projectResult.data;\n    projectLanguages.map((lang) =>\n      axios.post(`${process.env.REACT_APP_API}/jlp`, {\n        id_language: lang.id,\n        id_project: dataProject.id,\n      })\n    );\n    const clientResult = await axios.post(\n      `${process.env.REACT_APP_API}/clients`,\n      clientData\n    );\n    const dataClient = clientResult.data;\n\n    if (dataProject.id !== null && dataClient.id !== null) {\n      axios.post(`${process.env.REACT_APP_API}/jcp`, {\n        id_project: dataProject.id,\n        id_client: dataClient.id,\n      });\n    }\n    setCurrentProject(null);\n    setProjectLanguages();\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    if (editId) {\n      setCurrentProject(\n        allProjects.filter((project) => project.project_id === editId)[0]\n      );\n      getProjectLanguages(editId);\n    } else {\n      setCurrentProject(null);\n    }\n  }, [editId]);\n\n  return (\n    <>\n      <AdminHeader />\n      <div className=\"admin_page_container\">\n        <h2>{editId ? \"Modifier un projet\" : \"Créer un projet\"}</h2>\n        <form className=\"form_container\">\n          <div\n            className=\"project_form\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <h3 className=\"form_subtitle\">Projet :</h3>\n            <label htmlFor=\"project_name\" className=\"form_label\">\n              Nom du projet :\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"project_name\"\n                className=\"form_input\"\n                value={\n                  currentProject\n                    ? currentProject.project_name\n                    : projectData.name\n                }\n                onChange={handleProjectChange}\n              />\n            </label>\n            <label htmlFor=\"project_link\" className=\"form_label\">\n              Lien vers le projet :\n              <input\n                type=\"text\"\n                id=\"link\"\n                name=\"project_link\"\n                className=\"form_input\"\n                value={\n                  currentProject\n                    ? currentProject.project_link\n                    : projectData.link\n                }\n                onChange={handleProjectChange}\n              />\n            </label>\n            <label htmlFor=\"project_duration\" className=\"form_label\">\n              Durée du développement :\n              <input\n                type=\"text\"\n                id=\"duration\"\n                name=\"project_duration\"\n                className=\"form_input\"\n                value={\n                  currentProject\n                    ? currentProject.project_duration\n                    : projectData.duration\n                }\n                onChange={handleProjectChange}\n              />\n            </label>\n            <label htmlFor=\"background\" className=\"form_label\">\n              Image de couverture :\n              <input\n                type=\"text\"\n                id=\"background\"\n                name=\"background\"\n                className=\"form_input\"\n                value={\n                  currentProject\n                    ? currentProject.background\n                    : projectData.background\n                }\n                onChange={handleProjectChange}\n              />\n            </label>\n          </div>\n          <div className=\"language_form\">\n            <h3 className=\"form_subtitle\">Technologies utilisées :</h3>\n            {allLanguages.map((lang) => (\n              <label htmlFor=\"project_language\" className=\"checkbox_label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"project_language\"\n                  id={lang.id}\n                  value={lang.name}\n                  checked={projectLanguages.find((e) => e.id === +lang.id)}\n                  onChange={handleLanguageChange}\n                />\n                <span>{lang.name}</span>\n              </label>\n            ))}\n            <NewLanguageForm />\n          </div>\n          <div className=\"client_form\">\n            <h3 className=\"form_subtitle\">Client :</h3>\n            <label htmlFor=\"project_client\" className=\"form_label\">\n              Client :\n              <input\n                type=\"text\"\n                name=\"project_client\"\n                className=\"form_input\"\n                value={\n                  currentProject ? currentProject.client_name : clientData.name\n                }\n                onChange={handleClientChange}\n              />\n            </label>\n          </div>\n        </form>\n        <div className=\"form_btn_container\">\n          {currentProject ? (\n            <button\n              type=\"button\"\n              className=\"form_btn\"\n              onClick={handleEditSubmit}\n            >\n              Confirmer\n            </button>\n          ) : (\n            <button type=\"button\" className=\"form_btn\" onClick={handleSubmit}>\n              Confirmer\n            </button>\n          )}\n          <Link to=\"/admin\" onClick={handleClear}>\n            <button className=\"form_btn\">Annuler</button>\n          </Link>\n          {redirect && <Redirect to=\"/admin\" />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ allLanguages, allProjects, projectLanguages }) => ({\n  allLanguages,\n  allProjects,\n  projectLanguages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProjectLanguages: getProjectLanguages(dispatch),\n  setProjectLanguages: setProjectLanguages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/_reusable/SocialMedia.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Contact.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Home/Home.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Admin.jsx",["160"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { getAllProjects } from \"../../redux/actions/projectActions\";\nimport { getAllMessages } from \"../../redux/actions/messageActions\";\n\nimport ProjectList from \"../Project/ProjectList\";\n\nimport { AddIcon } from \"../../utils/svg\";\n\nimport \"../../css/Admin.css\";\nimport AdminHeader from \"../Navigation/Header/AdminHeader\";\n\nconst Admin = ({ allProjects, getAllProjects, getAllMessages }) => {\n  useEffect(() => {\n    getAllProjects();\n    getAllMessages();\n  }, []);\n\n  return (\n    <>\n      <AdminHeader />\n      <section className=\"admin_page_container\">\n        <h2 className=\"list_title\">Ajouter un nouveau projet</h2>\n        <Link to=\"/createProject\" className=\"list_container add_list\">\n          <AddIcon cssClass=\"add_icon\" />\n        </Link>\n        <h2 className=\"list_title\">Mes projets</h2>\n        <span>(Cliquez sur un projet pour l'éditer)</span>\n        {allProjects.map((project) => (\n          <ProjectList\n            id={project.project_id}\n            name={project.project_name}\n            link={project.project_link}\n            duration={project.project_duration}\n            client={project.client_name}\n            background={project.background}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\nconst mapStateToProps = ({ allProjects }) => ({\n  allProjects,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProjects: getAllProjects(dispatch),\n  getAllMessages: getAllMessages(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessageDetails.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessagePreview.jsx",["161"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"../../../css/Message/MessagePreview.css\";\n\nconst MessagePreview = ({ msg }) => {\n  const { name, email, subject, message, answered } = msg;\n  return (\n    <div className=\"message_container\">\n      <div className=\"message_header\">\n        <div className=\"header_info\">\n          <span className=\"message_info_title\">Nom : </span>\n          <span className=\"message_info_value\">{name}</span>\n        </div>\n        <div className=\"header_info\">\n          <span className=\"message_info_title\">Adresse e-mail : </span>\n          <span className=\"message_info_value\">{email}</span>\n        </div>\n      </div>\n      <div className=\"content_container\">\n        <div className=\"message_content\">\n          <span className=\"message_info_title\">Sujet : </span>\n          <span className=\"message_info_value\">{subject}</span>\n        </div>\n        <div className=\"message_content\">\n          <span className=\"message_info_title\">Message : </span>\n          <span className=\"message_info_value\">{message}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ allMessages }) => ({\n  allMessages,\n});\n\nexport default connect(mapStateToProps, null)(MessagePreview);\n","/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/Message/MessageList.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/AdminHeader.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/Header/HomeHeader.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Admin/LogIn.jsx",[],"/home/alex/projets/wcs/portfolio_checkpoint/portfolio_front/src/components/Navigation/SideBar.jsx",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":25,"column":6,"nodeType":"172","endLine":25,"endColumn":8,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":13,"column":10,"nodeType":"168","messageId":"169","endLine":13,"endColumn":15},{"ruleId":"170","severity":1,"message":"175","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":19,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":54,"column":15,"nodeType":"179","endLine":58,"endColumn":16},{"ruleId":"170","severity":1,"message":"180","line":139,"column":6,"nodeType":"172","endLine":139,"endColumn":14,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":19,"column":6,"nodeType":"172","endLine":19,"endColumn":8,"suggestions":"183"},{"ruleId":"166","severity":1,"message":"184","line":7,"column":42,"nodeType":"168","messageId":"169","endLine":7,"endColumn":50},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllLanguages' and 'getAllProjects'. Either include them or remove the dependency array. If 'getAllLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["187"],"'arrId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProjectLanguages' and 'id'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["188"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has missing dependencies: 'allProjects' and 'getProjectLanguages'. Either include them or remove the dependency array. If 'getProjectLanguages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],"React Hook useEffect has missing dependencies: 'getAllMessages' and 'getAllProjects'. Either include them or remove the dependency array. If 'getAllProjects' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["190"],"'answered' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [getAllLanguages, getAllProjects]",{"range":"199","text":"200"},"Update the dependencies array to be: [allProjects, getProjectLanguages, id]",{"range":"201","text":"202"},"Update the dependencies array to be: [allProjects, editId, getProjectLanguages]",{"range":"203","text":"204"},"Update the dependencies array to be: [getAllMessages, getAllProjects]",{"range":"205","text":"206"},[967,969],"[getAllLanguages, getAllProjects]",[925,938],"[allProjects, getProjectLanguages, id]",[3914,3922],"[allProjects, editId, getProjectLanguages]",[586,588],"[getAllMessages, getAllProjects]"]